// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OperationDigger.Models;

namespace OperationDigger.Migrations
{
    [DbContext(typeof(ebdbContext))]
    [Migration("20210409010128_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "en_US.UTF-8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("OperationDigger.Models.BioSample", b =>
                {
                    b.Property<string>("Area")
                        .HasColumnType("text")
                        .HasColumnName("area");

                    b.Property<string>("Bag")
                        .HasColumnType("text")
                        .HasColumnName("bag");

                    b.Property<int?>("BsId")
                        .HasColumnType("integer")
                        .HasColumnName("bs_id");

                    b.Property<int?>("BurialNum")
                        .HasColumnType("integer")
                        .HasColumnName("burial_num");

                    b.Property<int?>("Cluster")
                        .HasColumnType("integer")
                        .HasColumnName("cluster");

                    b.Property<string>("Date")
                        .HasColumnType("text")
                        .HasColumnName("date");

                    b.Property<string>("Ew")
                        .HasColumnType("text")
                        .HasColumnName("ew");

                    b.Property<string>("EwHigh")
                        .HasColumnType("text")
                        .HasColumnName("ew_high");

                    b.Property<string>("EwLow")
                        .HasColumnType("text")
                        .HasColumnName("ew_low");

                    b.Property<string>("Initials")
                        .HasColumnType("text")
                        .HasColumnName("initials");

                    b.Property<string>("LocationId")
                        .HasColumnType("text")
                        .HasColumnName("location_id");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("Ns")
                        .HasColumnType("text")
                        .HasColumnName("ns");

                    b.Property<string>("NsHigh")
                        .HasColumnType("text")
                        .HasColumnName("ns_high");

                    b.Property<string>("NsLow")
                        .HasColumnType("text")
                        .HasColumnName("ns_low");

                    b.Property<bool?>("PrevSamp")
                        .HasColumnType("boolean")
                        .HasColumnName("prev_samp");

                    b.Property<string>("Rack")
                        .HasColumnType("text")
                        .HasColumnName("rack");

                    b.ToTable("bio_samples");
                });

            modelBuilder.Entity("OperationDigger.Models.Burial", b =>
                {
                    b.Property<string>("AgeCode")
                        .HasColumnType("text")
                        .HasColumnName("age_code");

                    b.Property<string>("AgeSkull")
                        .HasColumnType("text")
                        .HasColumnName("age_skull");

                    b.Property<bool?>("AritifactFound")
                        .HasColumnType("boolean")
                        .HasColumnName("aritifact_found");

                    b.Property<string>("AritifactFound2")
                        .HasColumnType("text")
                        .HasColumnName("aritifact_found2");

                    b.Property<string>("AritifactFoundDesc")
                        .HasColumnType("text")
                        .HasColumnName("aritifact_found_desc");

                    b.Property<decimal?>("BasionBregmaHeight")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("basion_bregma_height");

                    b.Property<decimal?>("BasionNasion")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("basion_nasion");

                    b.Property<decimal?>("BasionProsthionLength")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("basion_prosthion_length");

                    b.Property<string>("BasliarSuture")
                        .HasColumnType("text")
                        .HasColumnName("basliar_suture");

                    b.Property<decimal?>("BizygomaticDiameter")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("bizygomatic_diameter");

                    b.Property<int?>("BodyAnalysis")
                        .HasColumnType("integer")
                        .HasColumnName("body_analysis");

                    b.Property<int?>("BoneLength")
                        .HasColumnType("integer")
                        .HasColumnName("bone_length");

                    b.Property<bool?>("BoneTaken")
                        .HasColumnType("boolean")
                        .HasColumnName("bone_taken");

                    b.Property<string>("BurialAc")
                        .HasColumnType("text")
                        .HasColumnName("burial_ac");

                    b.Property<string>("BurialAgeDeath")
                        .HasColumnType("text")
                        .HasColumnName("burial_age_death");

                    b.Property<string>("BurialAgeMeth")
                        .HasColumnType("text")
                        .HasColumnName("burial_age_meth");

                    b.Property<decimal?>("BurialDepth")
                        .HasPrecision(4, 1)
                        .HasColumnType("numeric(4,1)")
                        .HasColumnName("burial_depth");

                    b.Property<string>("BurialEw")
                        .HasColumnType("text")
                        .HasColumnName("burial_ew");

                    b.Property<string>("BurialGendMeth")
                        .HasColumnType("text")
                        .HasColumnName("burial_gend_meth");

                    b.Property<string>("BurialHc")
                        .HasColumnType("text")
                        .HasColumnName("burial_hc");

                    b.Property<int?>("BurialId")
                        .HasColumnType("integer")
                        .HasColumnName("burial_id");

                    b.Property<string>("BurialNs")
                        .HasColumnType("text")
                        .HasColumnName("burial_ns");

                    b.Property<string>("BurialNum")
                        .HasColumnType("text")
                        .HasColumnName("burial_num");

                    b.Property<string>("BurialPreservation")
                        .HasColumnType("text")
                        .HasColumnName("burial_preservation");

                    b.Property<int?>("BurialSF")
                        .HasColumnType("integer")
                        .HasColumnName("burial_s_f");

                    b.Property<int?>("BurialSH")
                        .HasColumnType("integer")
                        .HasColumnName("burial_s_h");

                    b.Property<string>("BurialSituation")
                        .HasColumnType("text")
                        .HasColumnName("burial_situation");

                    b.Property<string>("BurialSt")
                        .HasColumnType("text")
                        .HasColumnName("burial_st");

                    b.Property<string>("BurialSubplot")
                        .HasColumnType("text")
                        .HasColumnName("burial_subplot");

                    b.Property<string>("BurialWrapping")
                        .HasColumnType("text")
                        .HasColumnName("burial_wrapping");

                    b.Property<bool?>("ButtonOsteoma")
                        .HasColumnType("boolean")
                        .HasColumnName("button_osteoma");

                    b.Property<bool?>("ByuSample")
                        .HasColumnType("boolean")
                        .HasColumnName("byu_sample");

                    b.Property<string>("Cluster")
                        .HasColumnType("text")
                        .HasColumnName("cluster");

                    b.Property<string>("CranialSuture")
                        .HasColumnType("text")
                        .HasColumnName("cranial_suture");

                    b.Property<bool?>("CribraOrbitala")
                        .HasColumnType("boolean")
                        .HasColumnName("cribra_orbitala");

                    b.Property<int?>("DSkull")
                        .HasColumnType("integer")
                        .HasColumnName("d_skull");

                    b.Property<int?>("DayExc")
                        .HasColumnType("integer")
                        .HasColumnName("day_exc");

                    b.Property<string>("DecInitials")
                        .HasColumnType("text")
                        .HasColumnName("dec_initials");

                    b.Property<string>("DescriptionOfTaken")
                        .HasColumnType("text")
                        .HasColumnName("description_of_taken");

                    b.Property<string>("DexInitials")
                        .HasColumnType("text")
                        .HasColumnName("dex_initials");

                    b.Property<int?>("DorsalPitting")
                        .HasColumnType("integer")
                        .HasColumnName("dorsal_pitting");

                    b.Property<int?>("EastToFeet")
                        .HasColumnType("integer")
                        .HasColumnName("east_to_feet");

                    b.Property<int?>("EastToHead")
                        .HasColumnType("integer")
                        .HasColumnName("east_to_head");

                    b.Property<string>("EpiphysealUnion")
                        .HasColumnType("text")
                        .HasColumnName("epiphyseal_union");

                    b.Property<decimal?>("EstimateAge")
                        .HasPrecision(3, 1)
                        .HasColumnType("numeric(3,1)")
                        .HasColumnName("estimate_age");

                    b.Property<decimal?>("EstimateLivingStature")
                        .HasPrecision(6, 3)
                        .HasColumnType("numeric(6,3)")
                        .HasColumnName("estimate_living_stature");

                    b.Property<string>("FaceBundle")
                        .HasColumnType("text")
                        .HasColumnName("face_bundle");

                    b.Property<int?>("FemurDiameter")
                        .HasColumnType("integer")
                        .HasColumnName("femur_diameter");

                    b.Property<decimal?>("FemurHead")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("femur_head");

                    b.Property<decimal?>("FemurLength")
                        .HasPrecision(3, 1)
                        .HasColumnType("numeric(3,1)")
                        .HasColumnName("femur_length");

                    b.Property<string>("FieldBook")
                        .HasColumnType("text")
                        .HasColumnName("field_book");

                    b.Property<string>("FieldBookPgnum")
                        .HasColumnType("text")
                        .HasColumnName("field_book_pgnum");

                    b.Property<int?>("ForemanMagnum")
                        .HasColumnType("integer")
                        .HasColumnName("foreman_magnum");

                    b.Property<decimal?>("GeFunction")
                        .HasPrecision(7, 4)
                        .HasColumnType("numeric(7,4)")
                        .HasColumnName("ge_function");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("GenderGe")
                        .HasColumnType("text")
                        .HasColumnName("gender_ge");

                    b.Property<int?>("Gonian")
                        .HasColumnType("integer")
                        .HasColumnName("gonian");

                    b.Property<string>("HairColor")
                        .HasColumnType("text")
                        .HasColumnName("hair_color");

                    b.Property<bool?>("HairTaken")
                        .HasColumnType("boolean")
                        .HasColumnName("hair_taken");

                    b.Property<string>("HeadDirection")
                        .HasColumnType("text")
                        .HasColumnName("head_direction");

                    b.Property<int?>("HighEw")
                        .HasColumnType("integer")
                        .HasColumnName("high_ew");

                    b.Property<int?>("HighNs")
                        .HasColumnType("integer")
                        .HasColumnName("high_ns");

                    b.Property<int?>("HillBurialsA")
                        .HasColumnType("integer")
                        .HasColumnName("hill_burials_a");

                    b.Property<int?>("Humerus")
                        .HasColumnType("integer")
                        .HasColumnName("humerus");

                    b.Property<decimal?>("HumerusHead")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("humerus_head");

                    b.Property<decimal?>("HumerusLength")
                        .HasPrecision(3, 1)
                        .HasColumnType("numeric(3,1)")
                        .HasColumnName("humerus_length");

                    b.Property<int?>("IliacCrest")
                        .HasColumnType("integer")
                        .HasColumnName("iliac_crest");

                    b.Property<decimal?>("InterorbitalBreadth")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("interorbital_breadth");

                    b.Property<string>("LenCm")
                        .HasColumnType("text")
                        .HasColumnName("len_cm");

                    b.Property<string>("LenM")
                        .HasColumnType("text")
                        .HasColumnName("len_m");

                    b.Property<int?>("Length")
                        .HasColumnType("integer")
                        .HasColumnName("length");

                    b.Property<string>("LinearHypoplasiaEnamel")
                        .HasColumnType("text")
                        .HasColumnName("linear_hypoplasia_enamel");

                    b.Property<string>("LocationId")
                        .HasColumnType("text")
                        .HasColumnName("location_id");

                    b.Property<int?>("LowEw")
                        .HasColumnType("integer")
                        .HasColumnName("low_ew");

                    b.Property<int?>("LowNs")
                        .HasColumnType("integer")
                        .HasColumnName("low_ns");

                    b.Property<decimal?>("MaximumCranialBreadth")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("maximum_cranial_breadth");

                    b.Property<decimal?>("MaximumCranialLength")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("maximum_cranial_length");

                    b.Property<decimal?>("MaximumNasalBreadth")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("maximum_nasal_breadth");

                    b.Property<int?>("MedialClavicle")
                        .HasColumnType("integer")
                        .HasColumnName("medial_clavicle");

                    b.Property<int?>("MedialIpRamus")
                        .HasColumnType("integer")
                        .HasColumnName("medial_ip_ramus");

                    b.Property<string>("MetopicSuture")
                        .HasColumnType("text")
                        .HasColumnName("metopic_suture");

                    b.Property<string>("MonthExc")
                        .HasColumnType("text")
                        .HasColumnName("month_exc");

                    b.Property<string>("MtSkull")
                        .HasColumnType("text")
                        .HasColumnName("mt_skull");

                    b.Property<decimal?>("NasionProsthion")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("nasion_prosthion");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<int?>("NuchalCrest")
                        .HasColumnType("integer")
                        .HasColumnName("nuchal_crest");

                    b.Property<int?>("OrbitEdge")
                        .HasColumnType("integer")
                        .HasColumnName("orbit_edge");

                    b.Property<string>("OsteologyNotes")
                        .HasColumnType("text")
                        .HasColumnName("osteology_notes");

                    b.Property<string>("OsteologyUnknownComment")
                        .HasColumnType("text")
                        .HasColumnName("osteology_unknown_comment");

                    b.Property<string>("Osteophytosis")
                        .HasColumnType("text")
                        .HasColumnName("osteophytosis");

                    b.Property<int?>("ParietalBossing")
                        .HasColumnType("integer")
                        .HasColumnName("parietal_bossing");

                    b.Property<string>("PathologyAnomalies")
                        .HasColumnType("text")
                        .HasColumnName("pathology_anomalies");

                    b.Property<bool?>("PoroticHyperostosis")
                        .HasColumnType("boolean")
                        .HasColumnName("porotic_hyperostosis");

                    b.Property<string>("PoroticHyperostosisLoc")
                        .HasColumnType("text")
                        .HasColumnName("porotic_hyperostosis_loc");

                    b.Property<bool?>("PostcraniaMag")
                        .HasColumnType("boolean")
                        .HasColumnName("postcrania_mag");

                    b.Property<bool?>("PostcraniaTrauma")
                        .HasColumnType("boolean")
                        .HasColumnName("postcrania_trauma");

                    b.Property<int?>("PreaurSulcus")
                        .HasColumnType("integer")
                        .HasColumnName("preaur_sulcus");

                    b.Property<string>("PreservationIndex")
                        .HasColumnType("text")
                        .HasColumnName("preservation_index");

                    b.Property<int?>("PubicBone")
                        .HasColumnType("integer")
                        .HasColumnName("pubic_bone");

                    b.Property<string>("PubicSymphysis")
                        .HasColumnType("text")
                        .HasColumnName("pubic_symphysis");

                    b.Property<string>("RackShelf")
                        .HasColumnType("text")
                        .HasColumnName("rack_shelf");

                    b.Property<int?>("Robust")
                        .HasColumnType("integer")
                        .HasColumnName("robust");

                    b.Property<int?>("SampleNumber")
                        .HasColumnType("integer")
                        .HasColumnName("sample_number");

                    b.Property<int?>("SciaticNotch")
                        .HasColumnType("integer")
                        .HasColumnName("sciatic_notch");

                    b.Property<string>("SexSkull")
                        .HasColumnType("text")
                        .HasColumnName("sex_skull");

                    b.Property<bool?>("SkullMag")
                        .HasColumnType("boolean")
                        .HasColumnName("skull_mag");

                    b.Property<bool?>("SkullTrauma")
                        .HasColumnType("boolean")
                        .HasColumnName("skull_trauma");

                    b.Property<bool?>("SoftTissueTaken")
                        .HasColumnType("boolean")
                        .HasColumnName("soft_tissue_taken");

                    b.Property<int?>("SubpubicAngle")
                        .HasColumnType("integer")
                        .HasColumnName("subpubic_angle");

                    b.Property<int?>("SupraorbitalRidges")
                        .HasColumnType("integer")
                        .HasColumnName("supraorbital_ridges");

                    b.Property<bool?>("TemporalMandibularJointOsteoarthritis")
                        .HasColumnType("boolean")
                        .HasColumnName("temporal_mandibular_joint_osteoarthritis");

                    b.Property<bool?>("TextileTaken")
                        .HasColumnType("boolean")
                        .HasColumnName("textile_taken");

                    b.Property<decimal?>("TibiaLength")
                        .HasPrecision(3, 1)
                        .HasColumnType("numeric(3,1)")
                        .HasColumnName("tibia_length");

                    b.Property<int?>("Tomb")
                        .HasColumnType("integer")
                        .HasColumnName("tomb");

                    b.Property<string>("ToothAttrition")
                        .HasColumnType("text")
                        .HasColumnName("tooth_attrition");

                    b.Property<string>("ToothEruption")
                        .HasColumnType("text")
                        .HasColumnName("tooth_eruption");

                    b.Property<bool?>("ToothTaken")
                        .HasColumnType("boolean")
                        .HasColumnName("tooth_taken");

                    b.Property<int?>("VentralArc")
                        .HasColumnType("integer")
                        .HasColumnName("ventral_arc");

                    b.Property<string>("WestToFeet")
                        .HasColumnType("text")
                        .HasColumnName("west_to_feet");

                    b.Property<string>("WestToHead")
                        .HasColumnType("text")
                        .HasColumnName("west_to_head");

                    b.Property<int?>("YearExc")
                        .HasColumnType("integer")
                        .HasColumnName("year_exc");

                    b.Property<string>("YrSkull")
                        .HasColumnType("text")
                        .HasColumnName("yr_skull");

                    b.Property<int?>("ZygomaticCrest")
                        .HasColumnType("integer")
                        .HasColumnName("zygomatic_crest");

                    b.ToTable("burials");
                });

            modelBuilder.Entity("OperationDigger.Models.CarbonDating", b =>
                {
                    b.Property<int?>("Area")
                        .HasColumnType("integer")
                        .HasColumnName("area");

                    b.Property<int?>("BurialNum")
                        .HasColumnType("integer")
                        .HasColumnName("burial_num");

                    b.Property<int?>("C14Sample2017")
                        .HasColumnType("integer")
                        .HasColumnName("c14_sample_2017");

                    b.Property<string>("Calibr95CalDateAvg")
                        .HasColumnType("text")
                        .HasColumnName("calibr_95_cal_date_avg");

                    b.Property<int?>("Calibr95CalDateMax")
                        .HasColumnType("integer")
                        .HasColumnName("calibr_95_cal_date_max");

                    b.Property<int?>("Calibr95CalDateMin")
                        .HasColumnType("integer")
                        .HasColumnName("calibr_95_cal_date_min");

                    b.Property<int?>("Calibr95CalDateSpan")
                        .HasColumnType("integer")
                        .HasColumnName("calibr_95_cal_date_span");

                    b.Property<int?>("CarbonId")
                        .HasColumnType("integer")
                        .HasColumnName("carbon_id");

                    b.Property<string>("Category")
                        .HasColumnType("text")
                        .HasColumnName("category");

                    b.Property<int?>("Conventional14cAgeBp")
                        .HasColumnType("integer")
                        .HasColumnName("conventional_14c_age_bp");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Ew")
                        .HasColumnType("text")
                        .HasColumnName("ew");

                    b.Property<int?>("EwLow")
                        .HasColumnType("integer")
                        .HasColumnName("ew_low");

                    b.Property<int?>("Foci")
                        .HasColumnType("integer")
                        .HasColumnName("foci");

                    b.Property<string>("Location")
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<string>("LocationId")
                        .HasColumnType("text")
                        .HasColumnName("location_id");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("Ns")
                        .HasColumnType("text")
                        .HasColumnName("ns");

                    b.Property<int?>("NsLow")
                        .HasColumnType("integer")
                        .HasColumnName("ns_low");

                    b.Property<string>("Questions")
                        .HasColumnType("text")
                        .HasColumnName("questions");

                    b.Property<int?>("Rack")
                        .HasColumnType("integer")
                        .HasColumnName("rack");

                    b.Property<int?>("Rack1")
                        .HasColumnType("integer")
                        .HasColumnName("rack_1");

                    b.Property<int?>("SizeMl")
                        .HasColumnType("integer")
                        .HasColumnName("size_ml");

                    b.Property<string>("Square")
                        .HasColumnType("text")
                        .HasColumnName("square");

                    b.Property<int?>("TubeNum")
                        .HasColumnType("integer")
                        .HasColumnName("tube_num");

                    b.Property<int?>("_14cCalenderDate")
                        .HasColumnType("integer")
                        .HasColumnName("14c_calender_date");

                    b.ToTable("carbon_dating");
                });

            modelBuilder.Entity("OperationDigger.Models.Cranial", b =>
                {
                    b.Property<decimal?>("BasionBregmaHeight")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("basion_bregma_height");

                    b.Property<decimal?>("BasionNasion")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("basion_nasion");

                    b.Property<decimal?>("BasionProsthionLen")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("basion_prosthion_len");

                    b.Property<decimal?>("BizygomaticDiameter")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("bizygomatic_diameter");

                    b.Property<string>("BodyGender")
                        .HasColumnType("text")
                        .HasColumnName("body_gender");

                    b.Property<string>("BurialArtDescription")
                        .HasColumnType("text")
                        .HasColumnName("burial_art_description");

                    b.Property<decimal?>("BurialDepth")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("burial_depth");

                    b.Property<int?>("BurialNum")
                        .HasColumnType("integer")
                        .HasColumnName("burial_num");

                    b.Property<string>("BurialPosEwDirection")
                        .HasColumnType("text")
                        .HasColumnName("burial_pos_ew_direction");

                    b.Property<string>("BurialPosEwNum")
                        .HasColumnType("text")
                        .HasColumnName("burial_pos_ew_num");

                    b.Property<string>("BurialPosNsDirection")
                        .HasColumnType("text")
                        .HasColumnName("burial_pos_ns_direction");

                    b.Property<string>("BurialPosNsNum")
                        .HasColumnType("text")
                        .HasColumnName("burial_pos_ns_num");

                    b.Property<string>("BurialSubplotDirection")
                        .HasColumnType("text")
                        .HasColumnName("burial_subplot_direction");

                    b.Property<bool?>("BuriedWithArtifacts")
                        .HasColumnType("boolean")
                        .HasColumnName("buried_with_artifacts");

                    b.Property<int?>("CId")
                        .HasColumnType("integer")
                        .HasColumnName("c_id");

                    b.Property<string>("Ew")
                        .HasColumnType("text")
                        .HasColumnName("ew");

                    b.Property<int?>("GilesGender")
                        .HasColumnType("integer")
                        .HasColumnName("giles_gender");

                    b.Property<decimal?>("InterorbitalBreadth")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("interorbital_breadth");

                    b.Property<string>("LocationId")
                        .HasColumnType("text")
                        .HasColumnName("location_id");

                    b.Property<decimal?>("MaxCranialBreadth")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("max_cranial_breadth");

                    b.Property<decimal?>("MaxNasalBreadth")
                        .HasPrecision(4, 2)
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("max_nasal_breadth");

                    b.Property<decimal?>("MaximumCranialLength")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("maximum_cranial_length");

                    b.Property<decimal?>("NasionProsthion")
                        .HasPrecision(5, 2)
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("nasion_prosthion");

                    b.Property<string>("Ns")
                        .HasColumnType("text")
                        .HasColumnName("ns");

                    b.Property<int?>("SampleNumber")
                        .HasColumnType("integer")
                        .HasColumnName("sample_number");

                    b.ToTable("cranial");
                });
#pragma warning restore 612, 618
        }
    }
}
